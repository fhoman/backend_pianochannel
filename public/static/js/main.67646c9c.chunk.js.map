{"version":3,"sources":["components/Header.jsx","components/Subnavadmin.jsx","components/Subnavstudent.jsx","services/auth-service.js","components/Login.jsx","services/admin-service.js","components/Admin.jsx","components/Students.jsx","components/Videos.jsx","components/Video.jsx","services/user-service.js","components/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","src","alt","Subnavadmin","to","Subnavstudent","Component","AuthService","signup","username","password","campus","course","service","post","then","response","data","login","isAuthenticated","get","logOut","this","axios","create","baseURL","process","withCredentials","Login","state","formSubmit","handleFormSubmit","event","preventDefault","setState","props","setUser","catch","error","console","log","handleChange","target","name","value","onSubmit","type","onChange","e","URL","AdminService","fetchVideos","fetchVideo","videoID","fetchStudents","fetchStudentsVideo","addStudent","user","tagVideo","untagVideo","FetchVideosStudent","Admin","handleInput","handleSubmit","student","err","Students","users","PianoApi","map","index","key","Videos","videos","video","id","snippet","title","thumbnails","default","url","_id","Video","tagUser","taggedVideo","taggedStudent","getNewData","untagUser","students","loading","match","params","onClick","UserService","Profile","UserID","width","height","resourceId","videoId","frameborder","allow","allowfullscreen","App","role","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67646c9c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n       \r\n\t<div className=\"header\"> \r\n\t\t\t\t\r\n\t\t\t\t<img src=\"https://www.pianolessenamsterdam.nl/wp-content/uploads/2017/08/PianolessenAmsterdam.png\" alt=\"Pianolessen Amsterdam\"></img>\t\r\n                            \r\n\t\t\t\t\r\n\t</div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Subnavadmin() {\r\n    return (\r\n        <div className='subnav'>\r\n           <ul>\r\n          \r\n        <li>    <Link to='/admin'>Home admin</Link></li>  \r\n        <li>       <Link to='/students'>Students</Link></li>  \r\n        <li>   <Link to='/videos'>Videos</Link></li>  \r\n\r\n         </ul> \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Subnavstudent extends Component {\r\n    render() {\r\n        return (\r\n            <div className='subnav'>\r\n            <ul>\r\n           \r\n         <li>    <Link to='/profile'>Profile</Link></li>  \r\n    \r\n \r\n          </ul> \r\n \r\n         </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.service = axios.create({\r\n      baseURL: `${process.env.REACT_APP_API_URL}/admin`,\r\n      withCredentials: true\r\n    })\r\n  \r\n  }\r\n\r\n  signup = (username, password,campus,course) => {\r\n    return this.service.post('/auth/signup', {username, password,campus,course})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  login = (username, password) => {\r\n    return this.service.post('/auth/login', {username, password})\r\n    .then(response => response.data)\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    return this.service.get('/auth/isLoggedIn')\r\n    .then(response => response.data)\r\n  }\r\n\r\n  logOut = () => {\r\n    return this.service.post('/auth/logout')\r\n    .then(response => response.data)\r\n  }\r\n\r\n}\r\n\r\nexport default AuthService","import React, { Component } from 'react'\r\nimport AuthService from '../services/auth-service'\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        service: new AuthService(),\r\n        formSubmit: false\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        this.state.service.login(username, password)\r\n        .then( response => {\r\n            this.setState({ username: \"\", password: \"\",formSubmit:true });\r\n            this.props.setUser(response);          \r\n        })\r\n        .catch( error => console.log(error) )\r\n      }\r\n    \r\n      handleChange = (event) => {  \r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n      }\r\n\r\n  render() {\r\n\r\n    if (this.state.formSubmit) {\r\n\r\n    return <Redirect to='/profile'></Redirect>\r\n\r\n    } \r\n\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleFormSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username:</label>\r\n          <input type=\"text\" name=\"username\" className=\"form-control\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n          <label>Password:</label>\r\n          <input name=\"password\"  className=\"form-control\" value={this.state.password} onChange={ e => this.handleChange(e)} />\r\n          </div>\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n        <p>Don't have account? \r\n            <Link to={\"/signup\"}> Signup</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}","import axios from 'axios'\r\n\r\n\r\nconst URL = axios.create({\r\n\r\n    baseURL: `${process.env.REACT_APP_API_URL}/admin` ,\r\n  })\r\n\r\n  const AdminService = {\r\n    fetchVideos: () => {\r\n      return URL.post('/videos')\r\n    },\r\n    fetchVideo:  (videoID) => { \r\n      return URL.post('/video',videoID)\r\n    },\r\n    fetchStudents: () => {\r\n      return URL.post('/students')\r\n    },\r\n    fetchStudentsVideo: (videoID) => {\r\n      console.log(videoID)\r\n      return URL.post('/students-video',videoID)\r\n    },\r\n    addStudent: (user) => {\r\n      console.log(user)\r\n      return URL.post('/add-student',user)\r\n    },\r\n    tagVideo: (data) => {\r\n      console.log(data)\r\n      return URL.post('/tagvideo',data)\r\n    },\r\n    untagVideo: (data) => {\r\n      console.log(data)\r\n      return URL.post('/untagvideo',data)\r\n    },\r\n    FetchVideosStudent: (user) => {\r\n      return URL.post('/profile/videos-student',user)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\nexport default AdminService","import React, { Component } from 'react'\r\nimport AdminService from '../services/admin-service'\r\n\r\nexport default class Admin extends Component {\r\n\r\nstate = {username:''}\r\n\r\nhandleInput = (e) => {\r\n    let {name, value} = e.target\r\n      this.setState({[name]: value})\r\n  }\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n   \r\n    AdminService.addStudent({user:this.state.username})\r\n    .then(student => console.log('student added'))\r\n    .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form  onSubmit={(e) => this.handleSubmit(e)}>\r\n       \r\n        <label>Username</label>\r\n        <input onChange={(e) => this.handleInput(e)} name='username' value={this.state.user}></input>\r\n           \r\n        \r\n        <input type=\"submit\" className=\"input search-bar\" value=\"submit\"/>\r\n        </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport PianoApi from '../services/admin-service'\r\n\r\nexport default class Students extends Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n          users: []\r\n      }      \r\n  }\r\n   \r\n  componentDidMount() {\r\n    PianoApi.fetchStudents()\r\n    .then(data => {\r\n     \r\n        this.setState({ users:data.data })\r\n        \r\n        console.log(this.state)\r\n    }).catch(err => console.log(err))\r\n       }\r\n  \r\n  \r\n    render() {\r\n  \r\n  \r\n    return (\r\n      <div >\r\n          {this.state.users.map((user,index) =>    \r\n         <div key={index} >\r\n         {user.username}<p></p>        \r\n               </div>              \r\n         )}\r\n      </div>\r\n    )\r\n  }\r\n  }","import React, {Component} from 'react';\r\nimport AdminService from '../services/admin-service'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Videos extends Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state = {\r\n          videos: [],\r\n          \r\n      }      \r\n  }\r\n   \r\ncomponentDidMount() {\r\n  AdminService.fetchVideos()\r\n    .then(data => {\r\n        this.setState({ videos:data.data })        \r\n    }).catch(err => console.log(err))            \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n  \r\n        \r\n    return (\r\n      <div >\r\n          {this.state.videos.map((video,index) =>    \r\n         <div key={video.id} >\r\n         {video.snippet.title}<p></p>\r\n         <img src={video.snippet.thumbnails.default.url} alt={video.snippet.title}></img>\r\n         <Link to={`/video/${video._id}`}>Tag students</Link>\r\n         </div>        \r\n         \r\n         )}\r\n\r\n      </div>\r\n    )\r\n            }\r\n  }","import React, { Component } from 'react'\r\nimport AdminService from '../services/admin-service'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Video extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            students: [],\r\n            taggedVideo:'',\r\n            taggedStudent:'',\r\n            loading:true            \r\n        }      \r\n    }\r\n\r\ngetNewData() {\r\n    AdminService.fetchVideo({videoID:this.props.match.params.id})\r\n    .then(video => {\r\n        this.setState({taggedVideo:video.data,loading:false})\r\n        AdminService.fetchStudentsVideo({videoID:this.state.taggedVideo._id})\r\n        .then(students => { \r\n        this.setState({students:students.data})\r\n        })          \r\n    })\r\n}\r\n\r\ncomponentDidMount() {    \r\nthis.getNewData()\r\n}\r\n    \r\ntagUser = (username) => {     \r\nconst data = {username:username,\r\nvideoID:this.state.taggedVideo._id}\r\nAdminService.tagVideo(data)\r\n.then(() => {\r\n    this.setState({taggedStudent:username})\r\nthis.getNewData()      \r\n}   )\r\n.catch(err => console.log(err))\r\n\r\n    }  \r\n\r\nuntagUser = (username) => {\r\n    const data = {username:username,\r\n        videoID:this.state.taggedVideo._id}\r\nAdminService.untagVideo(data)\r\n.then(() => {\r\n    this.setState({taggedStudent:username})\r\n    this.getNewData()  \r\n}   )\r\n.catch(err => console.log(err))\r\n}\r\n\r\n    render() {\r\n       \r\n       \r\n        if (this.state.loading) {\r\n           \r\nreturn <div>Loading</div>\r\n        }\r\n\r\nelse{\r\n    const {title} = this.state.taggedVideo.snippet\r\n        return (\r\n            <div>\r\n\r\n{title}\r\n<p></p>\r\n<h3>Tagged users</h3>\r\n{this.state.taggedVideo.users.map((student,index) => {\r\n\r\nreturn <div key={index}>{student.username} <button onClick={(e) => this.untagUser(student.username)}>Untag student</button> </div>\r\n\r\n})}\r\n<p></p>\r\n<h3>Untagged users </h3>\r\n{this.state.students.map((student,index) => {\r\n\r\nreturn <div key={index}>{student.username} <button onClick={(e) => this.tagUser(student.username)}>Tag user</button></div>\r\n\r\n})}\r\n<p></p>\r\n<Link to='/videos'>Back to videos</Link>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n}","import axios from 'axios'\r\n\r\n\r\nconst URL = axios.create({\r\n    baseURL: `${process.env.REACT_APP_API_URL}/admin`,\r\n  })\r\n\r\n  const UserService = {\r\n   \r\n    FetchVideosStudent: (user) => {\r\n      return URL.post('/videos-student',user)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\nexport default UserService","import React, { Component } from 'react'\r\nimport UserService from '../services/user-service'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default class Profile extends Component {\r\n\r\nstate = {username:'fhoman@gmail.com',\r\n         videos:[],\r\n         loading:true}\r\n\r\ncomponentDidMount() {\r\nUserService.FetchVideosStudent({UserID:this.state.username})\r\n.then(response => {\r\nconsole.log(response.data)\r\nthis.setState({videos:response.data[0].videos,\r\nloading:false})\r\n\r\n})\r\n\r\n}\r\n    render() {\r\n\r\nconst YouTubeURL = 'https://www.youtube.com/embed/'\r\n   \r\nif (this.state.loading) {\r\n\r\n return   <div>Loading</div>\r\n\r\n}\r\n\r\n        return (\r\n            <div>\r\n              <h3>Student profile </h3>  \r\n\r\n{this.state.username}\r\n\r\n{this.state.videos.map((video,index) => {\r\n\r\nreturn <div key={index}>{video.snippet.title} \r\n<p></p>\r\n<iframe title={index} width=\"560\" height=\"315\" src={YouTubeURL+video.snippet.resourceId.videoId} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n</div>\r\n\r\n\r\n})}\r\n\r\n            </div>\r\n        )\r\n       }   }\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Header from './components/Header'\r\nimport Subnavadmin from './components/Subnavadmin'\r\nimport Subnavstudent from './components/Subnavstudent'\r\nimport Login from './components/Login'\r\nimport Admin from './components/Admin'\r\nimport Students from './components/Students'\r\nimport Videos from './components/Videos'\r\nimport Video from './components/Video'\r\nimport Profile from './components/Profile'\r\nimport { Route,Switch } from 'react-router-dom';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n        videos: [],\r\n        role:'ADMIN',\r\n        user:'admin@gmail.com'\r\n    }      \r\n}\r\n \r\n\r\n\r\n  render() {\r\n\r\nif (this.state.user === null ) {\r\n\r\n  return (\r\n    <div >\r\n    <Header></Header>\r\n    <Login></Login>\r\n      \r\n</div>\r\n        )\r\n\r\n}\r\n\r\nelse {\r\n\r\n\r\nif (this.state.role === 'ADMIN') {\r\n\r\n  return (\r\n    <div >\r\n        <Header></Header>\r\n      <Subnavadmin></Subnavadmin>\r\n      <Switch>\r\n    <Route path=\"/admin\" > <Admin ></Admin>\r\n\r\n    </Route>\r\n    <Route path=\"/students\" component={Students}></Route>\r\n    <Route exact path=\"/videos\" component={Videos} ></Route>\r\n    <Route exact path=\"/video/:id\" component={Video} ></Route>\r\n \r\n    </Switch>\r\n    </div>\r\n  )\r\n  }\r\n\r\n  else if (this.state.role === 'USER') {\r\n\r\n    return (\r\n      <div >\r\n        \r\n\r\n      <Header></Header>\r\n        <Subnavstudent></Subnavstudent>\r\n        <Switch>\r\n      <Route path=\"/profile/:id\" >\r\n        <Profile ></Profile>\r\n  \r\n      </Route>\r\n \r\n      </Switch>\r\n      </div>\r\n    )\r\n\r\n\r\n  }\r\n}\r\n\r\n}\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n    </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}